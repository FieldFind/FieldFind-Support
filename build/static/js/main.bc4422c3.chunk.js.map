{"version":3,"sources":["assets/logo.png","components/NavBar/NavBar.component.jsx","pages/HomePage/Home.page.jsx","components/LoginForm/LoginForm.component.jsx","pages/LoginPage/Login.page.jsx","components/RegisterForm/RegisterForm.component.jsx","pages/RegisterFormPage/Register.page.jsx","pages/TicketsPage/Tickets.page.jsx","pages/SupportFormPage/SupportForm.page.jsx","components/TicketResponse/TicketResponse.component.jsx","pages/TicketDetailPage/TicketDetail.page.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","match","className","to","sessionStorage","getItem","src","logo","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","onClick","removeItem","HomePage","style","fontSize","Logo","handleChange","setFunction","newStateEvent","target","value","history","useState","email","setEmail","password","setPassword","disabled","setDisabled","errors","setErrors","changeEmail","useCallback","changePassword","handleSubmit","event","preventDefault","axios","post","identifier","then","response","setItem","data","jwt","user","push","catch","error","onSubmit","color","htmlFor","name","placeholder","onChange","aria-hidden","href","LoginPage","setName","confirmedPass","setconfirmedPass","inRequest","setInRequest","changeName","changeConfirmedPassword","useEffect","length","username","backgroundColor","Register","ticketStates","1","2","TicketsPage","tickets","setTickets","get","headers","Authorization","Tickets","useMemo","map","ticket","index","key","scope","state","title","align","moment","updated_at","format","created_at","class","SupportFormPage","setTitle","description","setDescription","changeTitle","changeDescription","users_permissions_user","rows","TicketResponse","TicketDetail","setTicket","params","ticketId","aria-valuenow","aria-valuemin","aria-valuemax","App","exact","path","component","RegisterPage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.bc4422c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7acae45f.png\";","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport \"./NavBar.styles.scss\";\r\nimport logo from \"../../assets/logo.png\";\r\n\r\nfunction NavBar({ match }) {\r\n  const signOut = () => {\r\n    sessionStorage.removeItem(\"jwt\");\r\n    sessionStorage.removeItem(\"userId\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark navbar-style\">\r\n      <Link\r\n        to={`${!sessionStorage.getItem(\"jwt\") ? \"/\" : \"/tickets\"}`}\r\n        className=\"navbar-brand\"\r\n      >\r\n        <img\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top mr-1\"\r\n          alt=\"\"\r\n        ></img>\r\n        Field Find\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          {!sessionStorage.getItem(\"jwt\") ? (\r\n            <>\r\n              <li className=\"nav-item active\">\r\n                <Link to=\"/login\" className=\"nav-link\">\r\n                  Iniciar sesión <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/register\">\r\n                  Crear cuenta\r\n                </Link>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <li className=\"nav-item dropdown active\">\r\n                <span\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Tickets\r\n                </span>\r\n                <div\r\n                  className=\"dropdown-menu .dropdown-menu-right\"\r\n                  aria-labelledby=\"navbarDropdown\"\r\n                >\r\n                  <Link className=\"dropdown-item\" to=\"/support\">\r\n                    Crear ticket\r\n                  </Link>\r\n                  <Link className=\"dropdown-item\" to=\"/tickets\">\r\n                    Ver tickets\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item active\" onClick={signOut}>\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                  Cerrar sesión\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport \"./HomePage.styles.scss\";\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <section className=\"jumbotron home-page containerStyles\">\r\n      <h1 className=\"display-4 mb-4\" style={{ fontSize: \"5vw\" }}>\r\n        Bienvenido a la página de soporte de FieldFind.\r\n      </h1>\r\n      <div className=\"flex-row-center\">\r\n        <div className=\"w-75 mt-15\">\r\n          <p>\r\n            Si estás visitando esta página, es porque tuviste algún problema.\r\n            Estamos aquí para ayudarte.\r\n          </p>\r\n\r\n          <h4 style={{ fontSize: \"3vw\" }}>\r\n            <b>¿Qué es Field Find?</b>\r\n          </h4>\r\n          <p>\r\n          Field Find es una app móvil que te permitira reservar espacios deportivos para tu recreacion!.\r\n          </p>\r\n\r\n          <h4 style={{ fontSize: \"3vw\" }}>\r\n            <b>Funcionalidades de esta página</b>\r\n          </h4>\r\n          <ul>\r\n            <li>Creación de tickets</li>\r\n            <li>Visualización de tickets creados</li>\r\n            <li>Soporte técnico 24/7</li>\r\n          </ul>\r\n          <Link to=\"/login\" className=\"btn btn-primary logInBtn\">\r\n            Iniciar Sesión\r\n          </Link>\r\n        </div>\r\n        <img src={Logo} id=\"HomeLogo\" alt=\"Logo Field Find\" />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport \"./LogInForm.styles.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst handleChange = (setFunction) => (newStateEvent) => {\r\n  setFunction(newStateEvent.target.value);\r\n};\r\n\r\nfunction LoginForm({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [errors, setErrors] = useState({\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  const changeEmail = useCallback(\r\n    (email) => {\r\n      handleChange(setEmail)(email);\r\n      setErrors({ ...errors, email: false });\r\n    },\r\n    [setEmail, errors]\r\n  );\r\n  const changePassword = useCallback(handleChange(setPassword), [setPassword]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (event) => {\r\n      if (password) {\r\n        setDisabled(true);\r\n        event.preventDefault();\r\n        axios\r\n          .post(\"https://fieldfind-backend.herokuapp.com/auth/local\", {\r\n            identifier: email,\r\n            password: email,\r\n          })\r\n          .then((response) => {\r\n            sessionStorage.setItem(\"jwt\", response.data.jwt);\r\n            sessionStorage.setItem(\"userId\", response.data.user.id);\r\n            history.push(\"/tickets\");\r\n          })\r\n          .catch((error) => {\r\n            setErrors({ ...errors, email: true });\r\n            setDisabled(false);\r\n          });\r\n      }\r\n    },\r\n    [email, password, errors, history]\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-form-component\">\r\n      <img className=\"LogoImage\" src={Logo} alt=\"logo\" />\r\n      <h1>Inicio de sesión</h1>\r\n      <form className=\"formStyle\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label style={{color: '#A1A4A7'}} className=\"labelStyle\" htmlFor=\"email\">\r\n            Correo electrónico\r\n          </label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"form-control formInput\"\r\n            id=\"email\"\r\n            placeholder=\"nombre@ejemplo.com\"\r\n            value={email}\r\n            onChange={changeEmail}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label style={{color: '#A1A4A7'}} className=\"labelStyle\" htmlFor=\"password\">\r\n            Contraseña\r\n          </label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className={`form-control formInput ${\r\n              errors.email ? \"is-invalid\" : \"\"\r\n            }`}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={changePassword}\r\n          />\r\n          {errors.email ? (\r\n            <div className=\"invalid-feedback\">\r\n              Correo o contraseña incorrecta\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary logInBtn\"\r\n          type=\"submit\"\r\n          disabled={disabled}\r\n        >\r\n          {disabled ? (\r\n            <span\r\n              className=\"spinner-border spinner-border-sm mr-2\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n          ) : null}\r\n          Iniciar sesión\r\n        </button>\r\n        <p className = \"textToLink\" >¿No tienes una cuenta de Field Find? <a style= {{color: 'white'}} className = \"hyperlink\" href=\"/register\">Registrate</a></p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from \"react\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm.component\";\r\n\r\nexport default function LoginPage() {\r\n  return <LoginForm />;\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport \"./RegisterForm.styles.scss\";\r\n\r\nconst handleChange = (setFunction) => (newStateEvent) => {\r\n  setFunction(newStateEvent.target.value);\r\n};\r\n\r\nfunction RegisterForm({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmedPass, setconfirmedPass] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [inRequest, setInRequest] = useState(false);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [errors, setErrors] = useState({\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  const changeName = useCallback(handleChange(setName), [setName]);\r\n  const changeEmail = useCallback(\r\n    (email) => {\r\n      handleChange(setEmail)(email);\r\n      setErrors({ ...errors, email: false });\r\n    },\r\n    [setEmail, errors]\r\n  );\r\n  const changePassword = useCallback(handleChange(setPassword), [setPassword]);\r\n  const changeConfirmedPassword = useCallback(handleChange(setconfirmedPass), [\r\n    setconfirmedPass,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setDisabled(password !== confirmedPass || !password.length);\r\n    setErrors({ ...errors, password: password !== confirmedPass });\r\n  }, [password, confirmedPass]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      setDisabled(true);\r\n      setInRequest(true);\r\n\r\n      if (password === confirmedPass) {\r\n        axios\r\n          .post(\"https://fieldfind-backend.herokuapp.com/auth/local/register\", {\r\n            username: name,\r\n            email: email,\r\n            password: email,\r\n          })\r\n          .then((response) => {\r\n            sessionStorage.setItem(\"jwt\", response.data.jwt);\r\n            sessionStorage.setItem(\"userId\", response.data.user.id);\r\n            history.push(\"/tickets\");\r\n          })\r\n          .catch((error) => {\r\n            // Handle error.\r\n            setErrors({ ...errors, email: true });\r\n            setDisabled(false);\r\n            setInRequest(false);\r\n          });\r\n      }\r\n    },\r\n    [name, password, email, confirmedPass, errors, history]\r\n  );\r\n\r\n  return (\r\n    <div className=\"register-form-component\">\r\n      <img className=\"LogoImage\" src={Logo} alt=\"logo\" />\r\n      <h1 style= {{color: '#A1A4A7'}}>Registro de cuenta</h1>\r\n      <form className=\"formStyle\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label style= {{color: '#A1A4A7'}} className=\"labelStyle\" htmlFor=\"name\">\r\n            Nombre completo\r\n          </label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control formInput\"\r\n            id=\"name\"\r\n            placeholder=\"Juan Pérez\"\r\n            value={name}\r\n            onChange={changeName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label style= {{color: '#A1A4A7'}} className=\"labelStyle\" htmlFor=\"email\">\r\n            Correo electrónico\r\n          </label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className={`form-control formInput ${\r\n              errors?.email ? \"is-invalid\" : \"\"\r\n            }`}\r\n            id=\"email\"\r\n            placeholder=\"nombre@ejemplo.com\"\r\n            value={email}\r\n            onChange={changeEmail}\r\n          />\r\n          {errors.email ? (\r\n            <div className=\"invalid-feedback\">El correo ya está en uso</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label style= {{color: '#A1A4A7'}} className=\"labelStyle\" htmlFor=\"password\">\r\n            Contraseña\r\n          </label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"form-control formInput\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={changePassword}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label style= {{color: '#A1A4A7'}} className=\"labelStyle\" htmlFor=\"password\">\r\n            Confirmar contraseña\r\n          </label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className={`form-control formInput ${\r\n              errors.password ? \"is-invalid\" : \"\"\r\n            }`}\r\n            id=\"password\"\r\n            value={confirmedPass}\r\n            onChange={changeConfirmedPassword}\r\n          />\r\n          {errors.password ? (\r\n            <div className=\"invalid-feedback\">Las contraseñas no coinciden</div>\r\n          ) : null}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary logInBtn\"\r\n          type=\"submit\"\r\n          disabled={disabled}\r\n          style= {{backgroundColor: '#A1A4A7'}}\r\n        >\r\n          {disabled ? (\r\n            inRequest ? (\r\n              <span\r\n                className=\"spinner-border spinner-border-sm mr-2\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                \r\n              />\r\n            ) : null\r\n          ) : null}\r\n          Registrarse\r\n        </button>\r\n        <p style= {{color: '#A1A4A7'}} className=\"textToLink\">\r\n          ¿Ya tienes una cuenta de Field Find?{\" \"}\r\n          <a style= {{color: 'white'}} className=\"hyperlink\" href=\"/login\">\r\n            Inicia sesión\r\n          </a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport RegisterForm from '../../components/RegisterForm/RegisterForm.component';\r\n\r\nexport default function Register(){\r\n    return(\r\n        <RegisterForm/>\r\n    )\r\n}\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./TicketsPage.styles.scss\";\r\n\r\nexport const ticketStates = {\r\n  1: \"success\",\r\n  2: \"warning\",\r\n};\r\n\r\nexport default function TicketsPage({ history }) {\r\n  const [tickets, setTickets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://fieldfind-backend.herokuapp.com/tickets?users_permissions_user=${sessionStorage.getItem(\r\n          \"userId\"\r\n        )}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setTickets(response.data);\r\n      })\r\n      .catch((error) => {\r\n        return;\r\n      });\r\n  }, []);\r\n\r\n  const Tickets = useMemo(\r\n    () =>\r\n      tickets.map((ticket, index) => (\r\n        <tr\r\n          key={index}\r\n          onClick={() => {\r\n            history.push(`/tickets/${ticket.id}`);\r\n          }}\r\n        >\r\n          <th scope=\"row\">{ticket.id}</th>\r\n          <td>\r\n            <span\r\n              className={`badge badge-${\r\n                ticketStates[ticket.state.id]\r\n              } py-2 w-100`}\r\n            >\r\n              {ticket.state.state}\r\n            </span>\r\n          </td>\r\n          <td>{ticket.title}</td>\r\n          <td align=\"center\">\r\n            {moment(ticket.updated_at).format(\"DD/MM/YYYY hh:mm:ss\")}\r\n          </td>\r\n          <td align=\"center\">\r\n            {moment(ticket.created_at).format(\"DD/MM/YYYY hh:mm:ss\")}\r\n          </td>\r\n        </tr>\r\n      )),\r\n    [tickets, history]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section className=\"jumbotron\">\r\n        <div class=\"row mb-2\">\r\n          <h1 className=\"display-6 mr-auto ml-3\">Tickets</h1>\r\n          <Link to=\"/support\" className=\"btn btn-success ml-auto mr-3\">\r\n            Crear nuevo ticket\r\n          </Link>\r\n        </div>\r\n        <table className=\"table table-bordered table-light tickets-master-table table-responsive\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">Estado</th>\r\n              <th scope=\"col\">Mensaje</th>\r\n              <th className=\"text-center\" scope=\"col\">\r\n                Fecha de modificación\r\n              </th>\r\n              <th className=\"text-center\" scope=\"col\">\r\n                Fecha de creación\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{Tickets}</tbody>\r\n        </table>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./SupportForm.styles.scss\";\r\nimport { ticketStates } from \"../TicketsPage/Tickets.page\";\r\n\r\nconst handleChange = (setFunction) => (newStateEvent) => {\r\n  setFunction(newStateEvent.target.value);\r\n};\r\n\r\nexport default function SupportFormPage({ history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const changeTitle = useCallback(handleChange(setTitle), [setTitle]);\r\n  const changeDescription = useCallback(handleChange(setDescription), [\r\n    setDescription,\r\n  ]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      setDisabled(true);\r\n\r\n      axios\r\n        .post(\r\n          \"https://fieldfind-backend.herokuapp.com/tickets\",\r\n          {\r\n            title,\r\n            description,\r\n            state: 2,\r\n            users_permissions_user: sessionStorage.getItem(\"userId\"),\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          history.push(\"/tickets\");\r\n        })\r\n        .catch((error) => {\r\n          // Handle error.\r\n          setDisabled(false);\r\n        });\r\n    },\r\n    [title, description]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section className=\"jumbotron\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Título del problema</label>\r\n            <input\r\n              name=\"title\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"Problema con...\"\r\n              value={title}\r\n              onChange={changeTitle}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Mensaje</label>\r\n            <textarea\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              rows=\"3\"\r\n              placeholder=\"Ocurrió que...\"\r\n              value={description}\r\n              onChange={changeDescription}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <button className=\"btn ticketBtn\" type=\"submit\" disabled={disabled}>\r\n            {disabled ? (\r\n              <span\r\n                className=\"spinner-border spinner-border-sm mr-2\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              ></span>\r\n            ) : null}\r\n            Enviar\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./TicketResponse.styles.scss\";\r\n\r\nexport default function TicketResponse({ response, updated_at }) {\r\n  return (\r\n    <div className=\"response-container\">\r\n      <b>{`Por Equipo Field Find, el ${moment(updated_at).format(\r\n        \"DD/MM/YYYY hh:mm\"\r\n      )}`}</b>\r\n      <div className=\"message\">\r\n        <p>{response}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport TicketResponse from \"../../components/TicketResponse/TicketResponse.component\";\r\nimport \"./TicketDetail.styles.scss\";\r\nimport { ticketStates } from \"../TicketsPage/Tickets.page\";\r\n\r\nexport default function TicketDetail({ match }) {\r\n  const [ticket, setTicket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://fieldfind-backend.herokuapp.com/tickets/${match.params.ticketId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setTicket(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle error.\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card ticket-container\">\r\n        {ticket ? (\r\n          <>\r\n            <div className=\"card-body\">\r\n              <h1 className=\"card-title\">{ticket.title}</h1>\r\n              <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                <span\r\n                  className={`badge badge-${\r\n                    ticketStates[ticket.state.id]\r\n                  } mt-2 mr-1`}\r\n                >\r\n                  {ticket.state.state}\r\n                </span>{\" \"}\r\n                Ticket #{ticket.id}\r\n              </h6>\r\n              <p className=\"card-text\">{ticket.description}</p>\r\n              <p class=\"card-text\">\r\n                <small class=\"text-muted\">\r\n                  Abierto por {ticket.users_permissions_user.username}, el\r\n                  {\" \" +\r\n                    moment(ticket.created_at).format(\"DD/MM/YYYY hh:mm:ss\")}\r\n                </small>\r\n              </p>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"progress w-100 mb-4\">\r\n            <div\r\n              className=\"progress-bar bg-success w-100 progress-bar-striped progress-bar-animated\"\r\n              role=\"progressbar\"\r\n              aria-valuenow=\"100\"\r\n              aria-valuemin=\"100\"\r\n              aria-valuemax=\"100\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {ticket && ticket.response ? (\r\n        <div className=\"response\">\r\n          <TicketResponse\r\n            updated_at={ticket.updated_at}\r\n            response={ticket.response}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport NavBar from \"./components/NavBar/NavBar.component\";\r\nimport HomePage from \"./pages/HomePage/Home.page\";\r\nimport LoginPage from \"./pages/LoginPage/Login.page\";\r\nimport RegisterPage from \"./pages/RegisterFormPage/Register.page\";\r\nimport SupportFormPage from \"./pages/SupportFormPage/SupportForm.page\";\r\nimport TicketDetail from \"./pages/TicketDetailPage/TicketDetail.page\";\r\nimport TicketsPage from \"./pages/TicketsPage/Tickets.page\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavBar />\r\n        <main>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n            <Route path=\"/support\" component={SupportFormPage} />\r\n            <Route path=\"/register\" component={RegisterPage} />\r\n            <Route exact path=\"/tickets\" component={TicketsPage} />\r\n            <Route path=\"/tickets/:ticketId\" component={TicketDetail} />\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}